{
  "created": "2025-05-01T12:55:41.576499Z",
  "planTitle": "MyBabySync - Refactor to Central Apps Script Architecture",
  "tasks": [
    {
      "id": 1,
      "title": "Init",
      "description": "init repo",
      "status": "completed"
    },
    {
      "id": 2,
      "title": "Install dependencies",
      "description": "run npm install to install project dependencies",
      "status": "completed"
    },
    {
      "id": 3,
      "title": "Setup environment (.env.local)",
      "description": "create/update .env.local file with initial credentials",
      "status": "completed"
    },
    {
      "id": 4,
      "title": "Implement syncAllToKargov2 (Original Plan)",
      "description": "Original plan to add logic directly - Obsolete",
      "status": "obsolete"
    },
    {
      "id": 5,
      "title": "Create Core Logic Apps Script",
      "description": "Created private Apps Script project for core sync/label logic.",
      "status": "completed"
    },
    {
      "id": 6,
      "title": "Create Wrapper Apps Script",
      "description": "Created public Apps Script project to act as API wrapper.",
      "status": "completed"
    },
    {
      "id": 7,
      "title": "Deploy Wrapper Script as API Executable",
      "description": "Configured wrapper script project settings, linked GCP project, deployed as API Executable.",
      "status": "completed",
      "outputs": ["NEXT_PUBLIC_APPS_SCRIPT_DEPLOYMENT_ID=AKfycbxW3xcu6kw6PbkloOHd3hIdqp65yBgmrgqwSsrr-csbu0NzSz6jeHcW1V4Tf8ugLsdgBw"]
    },
    {
      "id": 8,
      "title": "Add Core Library to Wrapper",
      "description": "Added Core Logic Script as a library dependency to the Wrapper Script.",
      "status": "completed"
    },
    {
      "id": 9,
      "title": "Refactor Wrapper Script Code",
      "description": "Modified wrapper script (mergedSyncAndLabel.gs) to accept parameters (sheetId, keys, etc.) and call library, removing PropertiesService and setup functions.",
      "status": "completed"
    },
    {
      "id": 10,
      "title": "Refactor Core Logic Library Code",
      "description": "Modified core library script (Code.gs) to accept parameters passed from wrapper, removing direct PropertiesService usage.",
      "status": "completed",
      "notes": "User confirmed this was done manually online."
    },
    {
      "id": 11,
      "title": "Update Prisma Schema",
      "description": "Modify prisma/schema.prisma: remove googleScriptId, add driveFolderId, add fields for storing user API keys (consider encryption).",
      "status": "completed",
      "dependencies": [10]
    },
    {
      "id": 12,
      "title": "Run Prisma Migration",
      "description": "Run \"npx prisma migrate dev\" after updating schema.",
      "status": "completed",
      "dependencies": [11]
    },
    {
      "id": 13,
      "title": "Refactor Onboarding API (/api/onboarding/setup.js)",
      "description": "Update onboarding logic to only copy sheet, create folder, and save googleSheetId/driveFolderId to DB. Remove all script ID retrieval/saving.",
      "status": "completed",
      "dependencies": [12]
    },
    {
      "id": 14,
      "title": "Refactor/Create Key Saving API",
      "description": "Refactor /api/setScriptProps.js (or create new route) to save/update user API keys directly in the Prisma database.",
      "status": "completed",
      "dependencies": [12]
    },
    {
      "id": 15,
      "title": "Update Settings Modal Frontend",
      "description": "Modify components/SettingsModal.jsx to call the new database key saving API endpoint.",
      "status": "completed",
      "dependencies": [14]
    },
    {
      "id": 16,
      "title": "Refactor Backend API Callers",
      "description": "Update /api/syncOrders, /api/getOrders, /api/generateLabel to fetch user data/keys from DB, call central deployment ID, and pass parameters to wrapper script.",
      "status": "completed",
      "dependencies": [12, 7] 
    },
    {
      "id": 17,
      "title": "Update Documentation (README, ROADMAP)",
      "description": "Update README.md and ROADMAP.md to reflect the new central script architecture.",
      "status": "completed", 
      "dependencies": [10]
    },
    {
      "id": 18,
      "title": "Test End-to-End Flow",
      "description": "Thoroughly test onboarding, settings saving, order sync, order display, and label generation.",
      "status": "in progress",
      "dependencies": [13, 15, 16],
      "subtasks": [
        {
          "title": "Manual Testing: Onboarding",
          "description": "Log in with a new Google account, complete onboarding, and verify a new sheet and folder are created in your Google Drive.",
          "status": "completed"
        },
        {
          "title": "Manual Testing: Settings",
          "description": "Open the Settings page, enter API keys, and save. Refresh and verify the keys persist.",
          "status": "completed"
        },
        {
          "title": "Manual Testing: Sync Orders",
          "description": "Click 'Sync Orders' and verify orders appear in the table."
        },
        {
          "title": "Manual Testing: Generate Label",
          "description": "Click 'Generate Label' for an order and verify a label is created and a link appears."
        },
        {
          "title": "Unit Tests: Run Jest",
          "description": "Open a terminal, run 'npm test', and check that all tests pass. If any fail, read the error message and ask for help if needed."
        },
        {
          "title": "E2E Tests: Run Cypress",
          "description": "Open a terminal, run 'npx cypress open' or 'npx cypress run', and follow the on-screen instructions."
        },
        {
          "title": "Report Issues",
          "description": "If anything does not work as expected, write down what you did and what happened. Share this with the developer for help."
        }
      ]
    },
    {
      "id": 19,
      "title": "Prepare for Deployment",
      "description": "Configure production database, set all production environment variables on hosting platform.",
      "status": "pending",
      "dependencies": [18]
    },
    {
      "id": 20,
      "title": "Align Environment Variables and Onboarding Logic",
      "description": "Ensure .env.local uses correct variable names: GOOGLE_SHEETS_SPREADSHEET_ID for the master template, GOOGLE_SHEETS_PRIVATE_KEY for the service account, and onboarding copies the master sheet for each user. Remove legacy/unused variables. Confirm all required variables are present.",
      "status": "completed",
      "dependencies": [18]
    },
    {
      "id": 21,
      "title": "Fix Missing UI Components for Dev Server",
      "description": "Install missing shadcn/ui components (label, etc.) so the dev server can start.",
      "status": "in progress",
      "dependencies": [20]
    }
  ],
  "notes": "Architecture pivoted to a central API Executable Wrapper Script calling a private Core Logic Library. User-specific data (sheetId, keys, folderId) is stored in the backend DB and passed as parameters.",
  "testingStrategy": {
    "overview": "Testing ensures the app works for real users and catches bugs before deployment. We use three types: manual testing (step-by-step checks in the browser), unit tests (automated checks for small pieces of code), and end-to-end (E2E) tests (automated checks for the whole user flow).",
    "manual": [
      "Follow the subtasks under 'Test End-to-End Flow' in this file.",
      "Check each feature as a real user would: onboarding, settings, syncing, and label generation.",
      "Write down any problems or confusing steps."
    ],
    "unit": [
      "Run 'npm test' in the terminal to check that all code modules work as expected.",
      "If a test fails, read the error and ask for help if unsure."
    ],
    "e2e": [
      "Run 'npx cypress open' or 'npx cypress run' to launch automated browser tests.",
      "Follow the instructions in the Cypress window to run all tests.",
      "If a test fails, note the error and what you were doing."
    ],
    "reporting": [
      "For any issue, write down what you did, what you expected, and what actually happened.",
      "Share this with the developer or support team for help."
    ]
  }
}