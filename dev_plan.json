{
  "created": "2025-05-01T12:55:41.576499Z",
  "planTitle": "MyBabySync - Refactor to Central Apps Script Architecture",
  "tasks": [
    {
      "id": 1,
      "title": "Init",
      "description": "init repo",
      "status": "completed"
    },
    {
      "id": 2,
      "title": "Install dependencies",
      "description": "run npm install to install project dependencies",
      "status": "completed"
    },
    {
      "id": 3,
      "title": "Setup environment (.env.local)",
      "description": "create/update .env.local file with initial credentials",
      "status": "completed"
    },
    {
      "id": 4,
      "title": "Implement syncAllToKargov2 (Original Plan)",
      "description": "Original plan to add logic directly - Obsolete",
      "status": "obsolete"
    },
    {
      "id": 5,
      "title": "Create Core Logic Apps Script",
      "description": "Created private Apps Script project for core sync/label logic.",
      "status": "completed"
    },
    {
      "id": 6,
      "title": "Create Wrapper Apps Script",
      "description": "Created public Apps Script project to act as API wrapper.",
      "status": "completed"
    },
    {
      "id": 7,
      "title": "Deploy Wrapper Script as API Executable",
      "description": "Configured wrapper script project settings, linked GCP project, deployed as API Executable.",
      "status": "completed",
      "outputs": ["NEXT_PUBLIC_APPS_SCRIPT_DEPLOYMENT_ID=AKfycbxW3xcu6kw6PbkloOHd3hIdqp65yBgmrgqwSsrr-csbu0NzSz6jeHcW1V4Tf8ugLsdgBw"]
    },
    {
      "id": 8,
      "title": "Add Core Library to Wrapper",
      "description": "Added Core Logic Script as a library dependency to the Wrapper Script.",
      "status": "completed"
    },
    {
      "id": 9,
      "title": "Refactor Wrapper Script Code",
      "description": "Modified wrapper script (mergedSyncAndLabel.gs) to accept parameters (sheetId, keys, etc.) and call library, removing PropertiesService and setup functions.",
      "status": "completed"
    },
    {
      "id": 10,
      "title": "Refactor Core Logic Library Code",
      "description": "Modified core library script (Code.gs) to accept parameters passed from wrapper, removing direct PropertiesService usage.",
      "status": "completed",
      "notes": "User confirmed this was done manually online."
    },
    {
      "id": 11,
      "title": "Update Prisma Schema",
      "description": "Modify prisma/schema.prisma: remove googleScriptId, add driveFolderId, add fields for storing user API keys (consider encryption).",
      "status": "completed",
      "dependencies": [10]
    },
    {
      "id": 12,
      "title": "Run Prisma Migration",
      "description": "Run \"npx prisma migrate dev\" after updating schema.",
      "status": "completed",
      "dependencies": [11]
    },
    {
      "id": 13,
      "title": "Refactor Onboarding API (/api/onboarding/setup.js)",
      "description": "Update onboarding logic to only copy sheet, create folder, and save googleSheetId/driveFolderId to DB. Remove all script ID retrieval/saving.",
      "status": "completed",
      "dependencies": [12]
    },
    {
      "id": 14,
      "title": "Refactor/Create Key Saving API",
      "description": "Refactor /api/setScriptProps.js (or create new route) to save/update user API keys directly in the Prisma database.",
      "status": "completed",
      "dependencies": [12]
    },
    {
      "id": 15,
      "title": "Update Settings Modal Frontend",
      "description": "Modify components/SettingsModal.jsx to call the new database key saving API endpoint.",
      "status": "completed",
      "dependencies": [14]
    },
    {
      "id": 16,
      "title": "Refactor Backend API Callers",
      "description": "Update /api/syncOrders, /api/getOrders, /api/generateLabel to fetch user data/keys from DB, call central deployment ID, and pass parameters to wrapper script.",
      "status": "completed",
      "dependencies": [12, 7]
    },
    {
      "id": 17,
      "title": "Update Documentation (README, ROADMAP) - Initial Phase",
      "description": "Update README.md and ROADMAP.md to reflect the new central script architecture.",
      "status": "completed",
      "dependencies": [10]
    },
    {
      "id": 18,
      "title": "Test End-to-End Flow",
      "description": "Thoroughly test onboarding, settings saving, order sync, order display, and label generation.",
      "status": "blocked",
      "notes": "Completed onboarding and settings tests. Encountered persistent 'Invalid Credentials' (401) / 'File Not Found' (404) errors when calling Google Sheets/Drive/Apps Script Execution APIs. Root cause is likely limitations due to OAuth consent screen being in 'Testing' mode and requiring verification for sensitive scopes. Also addressed GCP verification center issues (domain, privacy URL).",
      "dependencies": [13, 15, 16],
      "subtasks": [
        {
          "title": "Manual Testing: Onboarding",
          "description": "Log in with a new Google account, complete onboarding, and verify a new sheet and folder are created in your Google Drive.",
          "status": "completed"
        },
        {
          "title": "Manual Testing: Settings",
          "description": "Open the Settings page, enter API keys, and save. Refresh and verify the keys persist.",
          "status": "completed"
        },
        {
          "title": "Manual Testing: Sync Orders",
          "description": "Click 'Sync Orders' and verify orders appear in the table.",
          "status": "blocked - OAuth Verification"
        },
        {
           "title": "Manual Testing: Get Orders",
           "description": "Verify order table loads data from sheet.",
           "status": "blocked - OAuth Verification"
        },
        {
          "title": "Manual Testing: Generate Label",
          "description": "Click 'Generate Label' for an order and verify a label is created and a link appears.",
           "status": "pending - Likely blocked by OAuth Verification"
        },
        {
          "title": "Unit Tests: Run Jest",
          "description": "Open a terminal, run 'npm test', and check that all tests pass. If any fail, read the error message and ask for help if needed.",
          "status": "completed"
        },
        {
          "title": "E2E Tests: Run Cypress",
          "description": "Open a terminal, run 'npx cypress open' or 'npx cypress run', and follow the on-screen instructions.",
          "status": "pending"
        },
        {
          "title": "Report Issues",
          "description": "If anything does not work as expected, write down what you did and what happened. Share this with the developer for help.",
          "status": "completed"
        }
      ]
    },
    {
      "id": 19,
      "title": "Prepare for Deployment",
      "description": "Configure production database, set all production environment variables on hosting platform.",
      "status": "completed",
      "dependencies": [18, 22],
      "notes": "Successfully configured Supabase with direct IPv4-enabled connection for DATABASE_URL in Vercel. All critical environment variables set. Application login successful on kolayxport.com.",
      "subtasks": [
        {
          "title": "Set up Supabase Database & Get Direct IPv4 Connection String",
          "description": "Ensured Supabase project is active and obtained the IPv4-enabled direct connection string (with add-on).",
          "status": "completed"
        },
        {
          "title": "Configure DATABASE_URL in Vercel with Supabase Direct Connection",
          "description": "Added the Supabase direct IPv4-enabled connection string as DATABASE_URL environment variable in Vercel for production.",
          "status": "completed"
        },
        {
          "title": "Push Prisma Schema to Supabase DB",
          "description": "Successfully ran 'npx prisma db push' against the Supabase database using the direct IPv4-enabled connection string.",
          "status": "completed"
        },
        {
          "title": "Set Other Production Environment Variables",
          "description": "Ensured NEXTAUTH_SECRET, NEXTAUTH_URL, GOOGLE_CLIENT_ID, GOOGLE_CLIENT_SECRET, NEXT_PUBLIC_APPS_SCRIPT_DEPLOYMENT_ID are set in Vercel.",
          "status": "completed"
        }
      ]
    },
    {
      "id": 20,
      "title": "Align Environment Variables and Onboarding Logic",
      "description": "Ensure .env.local uses correct variable names: GOOGLE_SHEETS_SPREADSHEET_ID for the master template, GOOGLE_SHEETS_PRIVATE_KEY for the service account, and onboarding copies the master sheet for each user. Remove legacy/unused variables. Confirm all required variables are present.",
      "status": "completed",
      "dependencies": [18]
    },
    {
      "id": 21,
      "title": "Fix Missing UI Components for Dev Server",
      "description": "Install missing shadcn/ui components (label, etc.) so the dev server can start.",
      "status": "completed", 
      "dependencies": [20]
    },
    {
      "id": 22,
      "title": "Google OAuth & GCP Setup and Verification",
      "description": "Complete the Google Cloud OAuth Consent Screen verification process, including scope justifications and providing a demo video, to enable full API access. Ensure domain verification and correct privacy/homepage URLs.",
      "status": "in progress",
      "dependencies": [],
      "notes": "Verification submitted. App functionality requiring sensitive scopes (Sheets, Drive, Apps Script Execution API) may be limited until verification completes. Homepage ownership and privacy policy URL discrepancies resolved.",
      "subtasks": [
        {
          "title": "Verify Homepage Ownership with Google Search Console",
          "description": "Add TXT record to DNS for domain verification.",
          "status": "completed"
        },
        {
          "title": "Resolve Privacy Policy URL in GCP Consent Screen",
          "description": "Ensure the privacy policy link is distinct from the homepage link and points to the correct page.",
          "status": "completed"
        },
        {
          "title": "Await Full OAuth Verification from Google",
          "description": "Monitor Google's review process after resolving initial discrepancies.",
          "status": "pending"
        }
      ]
    },
    {
      "id": 23,
      "title": "Generate Sitemap",
      "description": "Install next-sitemap, configure, and generate sitemap.xml and robots.txt.",
      "status": "completed"
    },
    {
      "id": 24,
      "title": "Create Public Footer Component",
      "description": "Create components/PublicFooter.js with specified three-column layout, dark gradient, social links, product/resource links, and copyright.",
      "status": "completed"
    },
    {
      "id": 25,
      "title": "Implement Public Pages Structure",
      "description": "Created PublicLayout, PublicNav, refactored public pages (index, privacy, signin, error) to use PublicLayout. Established new /dashboard route for authenticated users.",
      "status": "completed",
      "dependencies": [24]
    },
    {
      "id": 26,
      "title": "Redesign Homepage (pages/index.js)",
      "description": "Implemented a new Apple-esque landing page design with multiple sections (Hero, Trust Badges, Features, Comparison, Testimonials, CTA, FAQ).",
      "status": "completed",
      "dependencies": [25]
    },
    {
      "id": 27,
      "title": "Create Placeholder Page: Kurumsal (pages/kurumsal.js)",
      "description": "Created corporate/about page with hero, timeline, and CTA.",
      "status": "completed",
      "dependencies": [25]
    },
    {
      "id": 28,
      "title": "Create Placeholder Page: Entegrasyonlar (pages/entegrasyonlar.js)",
      "description": "Created integrations page with hero and filterable logo grid.",
      "status": "completed",
      "dependencies": [25]
    },
    {
      "id": 29,
      "title": "Create Placeholder Page: Nasıl Kullanılır (pages/nasil-kullanirim.js)",
      "description": "Created how-to page with hero, stepper component, and Loom video placeholder.",
      "status": "completed",
      "dependencies": [25]
    },
    {
      "id": 30,
      "title": "Create Placeholder Page: İletişim (pages/iletisim.js)",
      "description": "Created contact page with hero, two-column layout (form with react-hook-form, office info/map), and toast notifications.",
      "status": "completed",
      "dependencies": [25]
    },
    {
      "id": 31,
      "title": "Create Placeholder Page: Fiyatlandırma (pages/fiyatlandirma.js)",
      "description": "Created pricing page with hero, plans grid, comparison table, and FAQ accordion.",
      "status": "completed",
      "dependencies": [25]
    },
    {
      "id": 32,
      "title": "Create Placeholder Page: Kariyer (pages/kariyer.js)",
      "description": "Created careers page with hero (aurora SVG), culture section, open roles list, timeline, and CTA banner.",
      "status": "completed",
      "dependencies": [25]
    },
    {
      "id": 33,
      "title": "Create Docs Landing Page (pages/docs/index.js)",
      "description": "Created documentation landing page with hero, featured guides grid, and code snippet preview.",
      "status": "completed",
      "dependencies": [25]
    },
    {
      "id": 34,
      "title": "Setup next-seo for Global SEO Management",
      "description": "Installed next-seo, created next-seo.config.js, and integrated DefaultSeo into _app.js. Updated PublicLayout to use NextSeo.",
      "status": "completed"
    },
    {
      "id": 35,
      "title": "Create Authenticated App Layout (components/AppLayout.js)",
      "description": "Designed and implemented a new layout for the authenticated dashboard area, featuring a collapsible sidebar and sticky topbar.",
      "status": "completed"
    },
    {
      "id": 36,
      "title": "Refactor Dashboard to /app Route and AppLayout",
      "description": "Created pages/app/index.js using AppLayout, migrated old dashboard content, and updated sign-in and relevant links to point to /app.",
      "status": "completed",
      "dependencies": [35]
    },
    {
      "id": 37,
      "title": "Create Blog Pages (pages/blog.js & pages/blog/[slug].js)",
      "description": "Implemented main blog listing page and dynamic blog post pages with placeholder content, integrating with PublicLayout and NextSeo for SEO.",
      "status": "completed",
      "dependencies": [25]
    },
    {
      "id": 38,
      "title": "SEO Audit & Optimization Roadmap",
      "description": "Initial SEO audit performed; identified improvements such as structured data, canonical tags, per-page Open Graph images, alt text review, performance optimizations, and Google Search Console enhancements.",
      "status": "planned",
      "dependencies": [34],
      "subtasks": [
        { "title": "Add canonical URLs with NextSeo", "status": "completed" },
        { "title": "Per-page OG images & metadata", "status": "in progress" },
        { "title": "Structured data (Organization, Article)", "status": "in progress" },
        { "title": "Image optimization audit", "status": "planned" },
        { "title": "Accessibility & Lighthouse improvements", "status": "planned" }
      ]
    }
  ],
  "notes": "Architecture pivoted to a central API Executable Wrapper Script calling a private Core Logic Library. User-specific data (sheetId, keys, folderId) is stored in the backend DB and passed as parameters. Public pages and authenticated app section now have distinct, modern layouts.",
  "testingStrategy": {
    "overview": "Testing ensures the app works for real users and catches bugs before deployment. We use three types: manual testing (step-by-step checks in the browser), unit tests (automated checks for small pieces of code), and end-to-end (E2E) tests (automated checks for the whole user flow).",
    "manualTesting": {
      "onboarding": "Log in with a new Google account, complete onboarding, and verify a new sheet and folder are created in your Google Drive.",
      "settings": "Open the Settings page, enter API keys, and save. Refresh and verify the keys persist.",
      "syncOrders": "Click \"Sync Orders\" and verify orders appear in the table.",
      "getOrders": "Verify order table loads data from sheet.",
      "generateLabel": "Click \"Generate Label\" for an order and verify a label is created and a link appears.",
      "publicPages": "Navigate through all public pages (Homepage, Kurumsal, Entegrasyonlar, Nasıl Kullanılır, İletişim, Fiyatlandırma, Kariyer, Dokümanlar) and check for layout, content, and link integrity."
    },
    "unitTests": "Open a terminal, run \"npm test\", and check that all tests pass. If any fail, read the error message and ask for help if needed.",
    "e2eTests": "Open a terminal, run \"npx cypress open\" or \"npx cypress run\", and follow the on-screen instructions.",
    "reportingIssues": "If anything does not work as expected, write down what you did and what happened. Share this with the developer for help."
  }
}